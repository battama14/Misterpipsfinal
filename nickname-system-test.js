// Test du syst√®me de pseudo unifi√©
console.log('üß™ Test du syst√®me de pseudo unifi√©...');

// V√©rifier que le gestionnaire est charg√©
setTimeout(() => {
    if (window.nicknameManager) {
        console.log('‚úÖ Gestionnaire de pseudo unifi√© charg√©');
        
        // Test d'initialisation
        window.nicknameManager.initialize().then(nickname => {
            if (nickname) {
                console.log('‚úÖ Pseudo initialis√©:', nickname);
            } else {
                console.log('üìù Aucun pseudo trouv√© - sera demand√© √† l'utilisateur');
            }
        }).catch(error => {
            console.error('‚ùå Erreur initialisation pseudo:', error);
        });
        
    } else {
        console.error('‚ùå Gestionnaire de pseudo non trouv√©');
    }
    
    // V√©rifier les fonctions de nettoyage mobile
    if (window.loadMobileNickname) {
        console.log('‚úÖ Fonction mobile loadMobileNickname disponible');
    }
    
    if (window.saveMobileNicknameFromSettings) {
        console.log('‚úÖ Fonction mobile saveMobileNicknameFromSettings disponible');
    }
    
    // V√©rifier Firebase
    if (window.firebaseDB) {
        console.log('‚úÖ Firebase Database connect√©');
    } else {
        console.log('‚è≥ Firebase Database en attente...');
    }
    
    // V√©rifier l'utilisateur
    const uid = sessionStorage.getItem('firebaseUID');
    if (uid) {
        console.log('‚úÖ Utilisateur connect√©:', uid);
    } else {
        console.log('‚ùå Aucun utilisateur connect√©');
    }
    
}, 2000);

console.log('üß™ Test du syst√®me de pseudo lanc√©');